generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  createdAt  DateTime    @default(now())
  authTokens AuthToken[]
  File       File[]

  @@map("users")
}

model AuthToken {
  id           Int      @id @default(autoincrement())
  userId       Int
  refreshToken String
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("authtokens")
}

model File {
  id               Int        @id @default(autoincrement())
  userId           Int
  originalFilename String
  storagePath      String
  title            String?
  description      String?
  status           FileStatus @default(UPLOADED)
  extractedData    String?
  uploadedAt       DateTime   @default(now())
  user             User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  jobs             Job[]

  @@map("files")
}

model Job {
  id           Int       @id @default(autoincrement())
  fileId       Int
  jobType      String
  status       JobStatus
  errorMessage String?
  startedAt    DateTime?
  completedAt  DateTime?
  file         File      @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@map("jobs")
}

enum FileStatus {
  UPLOADED
  PROCESSING
  PROCESSED
  FAILED
}

enum JobStatus {
  QUEUED
  PROCESSING
  COMPLETED
  FAILED
}
